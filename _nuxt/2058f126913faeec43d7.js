(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{169:function(t,e,i){"use strict";i.r(e);var s={},a=i(15),n=Object(a.a)(s,function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("section",{staticClass:"section"},[i("h3",[t._v("HeredocDelimiterNaming")]),t._v(" "),i("ul",[i("li",[i("a",{attrs:{href:"#overview"}},[t._v("概要")])]),t._v(" "),i("li",[i("a",{attrs:{href:"#example"}},[t._v("例")])]),t._v(" "),i("li",[i("a",{attrs:{href:"#why"}},[t._v("なぜ？")])]),t._v(" "),i("li",[i("a",{attrs:{href:"#avoidance"}},[t._v("回避する方法")])])]),t._v(" "),i("section",{staticClass:"section",attrs:{id:"overview"}},[i("h4",[t._v("概要")]),t._v(" "),i("blockquote",{attrs:{cite:"https://www.rubydoc.info/gems/rubocop/RuboCop/Cop/Naming/HeredocDelimiterNaming"}},[t._v("\n      This cop checks that your heredocs are using meaningful delimiters. By default it disallows `END` and `EO*`, and can be configured through blacklisting additional delimiters.\n    ")])]),t._v(" "),i("section",{staticClass:"section",attrs:{id:"example"}},[i("h4",[t._v("例")])]),t._v(" "),i("section",{staticClass:"section",attrs:{id:"why"}},[i("h4",[t._v("なぜ？")]),t._v(" "),i("p",[t._v("\n      クラス名、メソッド名、変数名にも同様のことが言えると思いますが、ヒアドキュメント指定子にも何が値として設定されているかを、見た人が理解しやすい命名をするべき、と言う理念になっていると思われます。\n    ")])]),t._v(" "),i("section",{staticClass:"section",attrs:{id:"avoidance"}},[i("h4",[t._v("回避する方法")]),t._v(" "),i("h5",[t._v("記述箇所のみ")]),t._v(" "),i("h5",[t._v("特定のメソッドのみ")]),t._v(" "),i("h5",[t._v("アプリケーション全体")])])])}],!1,null,null,null);n.options.__file="HeredocDelimiterNaming.vue";e.default=n.exports}}]);